<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="learn.dao.CommentMapper" >
  <resultMap id="BaseResultMap" type="learn.entity.Comment" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="user_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="user_name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="date" jdbcType="DATE" javaType="java.util.Date" />
      <arg column="comment_type" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="comment_ref_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="praise_num" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="reply_num" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="comment_content" jdbcType="VARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, user_name, date, comment_type, comment_ref_id, praise_num, reply_num, 
    comment_content
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from comment
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from comment
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="learn.entity.Comment" >
    insert into comment (id, user_id, user_name, 
      date, comment_type, comment_ref_id, 
      praise_num, reply_num, comment_content
      )
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, 
      #{date,jdbcType=DATE}, #{commentType,jdbcType=INTEGER}, #{commentRefId,jdbcType=INTEGER}, 
      #{praiseNum,jdbcType=INTEGER}, #{replyNum,jdbcType=INTEGER}, #{commentContent,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="learn.entity.Comment" >
    insert into comment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="date != null" >
        date,
      </if>
      <if test="commentType != null" >
        comment_type,
      </if>
      <if test="commentRefId != null" >
        comment_ref_id,
      </if>
      <if test="praiseNum != null" >
        praise_num,
      </if>
      <if test="replyNum != null" >
        reply_num,
      </if>
      <if test="commentContent != null" >
        comment_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="date != null" >
        #{date,jdbcType=DATE},
      </if>
      <if test="commentType != null" >
        #{commentType,jdbcType=INTEGER},
      </if>
      <if test="commentRefId != null" >
        #{commentRefId,jdbcType=INTEGER},
      </if>
      <if test="praiseNum != null" >
        #{praiseNum,jdbcType=INTEGER},
      </if>
      <if test="replyNum != null" >
        #{replyNum,jdbcType=INTEGER},
      </if>
      <if test="commentContent != null" >
        #{commentContent,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="learn.entity.Comment" >
    update comment
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="date != null" >
        date = #{date,jdbcType=DATE},
      </if>
      <if test="commentType != null" >
        comment_type = #{commentType,jdbcType=INTEGER},
      </if>
      <if test="commentRefId != null" >
        comment_ref_id = #{commentRefId,jdbcType=INTEGER},
      </if>
      <if test="praiseNum != null" >
        praise_num = #{praiseNum,jdbcType=INTEGER},
      </if>
      <if test="replyNum != null" >
        reply_num = #{replyNum,jdbcType=INTEGER},
      </if>
      <if test="commentContent != null" >
        comment_content = #{commentContent,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="learn.entity.Comment" >
    update comment
    set user_id = #{userId,jdbcType=INTEGER},
      user_name = #{userName,jdbcType=VARCHAR},
      date = #{date,jdbcType=DATE},
      comment_type = #{commentType,jdbcType=INTEGER},
      comment_ref_id = #{commentRefId,jdbcType=INTEGER},
      praise_num = #{praiseNum,jdbcType=INTEGER},
      reply_num = #{replyNum,jdbcType=INTEGER},
      comment_content = #{commentContent,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectCommentByCourseId" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from comment
    where comment_type = 1
    and comment_ref_id = #{comment_ref_id,jdbcType=INTEGER}
    order by date DESC, id DESC
  </select>
  <select id="selectCommentByArticleId" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from comment
    where comment_type = 2
    and comment_ref_id = #{comment_ref_id,jdbcType=INTEGER}
    order by date DESC, id DESC
  </select>
  <select id="selectCommentByAnswerId" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from comment
    where comment_type = 3
    and comment_ref_id = #{comment_ref_id,jdbcType=INTEGER}
    order by date DESC, id DESC
  </select>
  <update id="updateReplyNum">
    update comment
    set reply_num = reply_num + #{0}
    where id = #{1}
  </update>
  <update id="updatePraiseNum">
    update comment
    set praise_num = praise_num + #{0}
    where id = #{1}
  </update>
  <delete id="deleteByRefId" parameterType="java.lang.Integer" >
    delete from comment
    where comment_ref_id = #{comment_ref_id,jdbcType=INTEGER}
  </delete>
</mapper>