<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="learn.dao.UserFocusMapper" >
  <resultMap id="BaseResultMap" type="learn.entity.UserFocus" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="user_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="focus_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="type" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="read_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, focus_id, type, read_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from userfocus
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from userfocus
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="learn.entity.UserFocus" >
    insert into userfocus (user_id, focus_id,
      type, read_id)
    values (#{userId,jdbcType=INTEGER}, #{focusId,jdbcType=INTEGER},
      #{type,jdbcType=INTEGER}, #{readId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="learn.entity.UserFocus" >
    insert into userfocus
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="focusId != null" >
        focus_id,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="readId != null" >
        read_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="focusId != null" >
        #{focusId,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="readId != null" >
        #{readId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="learn.entity.UserFocus" >
    update userfocus
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="focusId != null" >
        focus_id = #{focusId,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="readId != null" >
        read_id = #{readId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="learn.entity.UserFocus" >
    update userfocus
    set user_id = #{userId,jdbcType=INTEGER},
      focus_id = #{focusId,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      read_id = #{readId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByUserIdAndFocusId" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from userfocus
    where user_id = #{0}
    and focus_id = #{1}
    and type = #{2}
  </select>
  <select id="selectByUserId" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from userfocus
    where user_id = #{user_id,jdbcType=INTEGER}
  </select>
</mapper>